module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Editor = __webpack_require__(1);

	var _Editor2 = _interopRequireDefault(_Editor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Editor2.default;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _format = __webpack_require__(3);

	var _range = __webpack_require__(5);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function escapeHTML(str) {
	  return str.replace(/&/g, '&amp;') // `&`必须最前`
	  // .replace(/ /g, '&nbsp;')
	  .replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
	}

	function objEqual() {
	  var o1 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var o2 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	  var k1 = Object.keys(o1);
	  var k2 = Object.keys(o2);

	  if (k1.length !== k2.length) return false;
	  return k1.every(function (k) {
	    return o1[k] === o2[k];
	  });
	}

	var Editor = function (_Component) {
	  _inherits(Editor, _Component);

	  function Editor() {
	    _classCallCheck(this, Editor);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Editor).call(this));

	    _this.savedRange = null;
	    _this.onMouseDown = _this.onMouseDown.bind(_this);
	    _this.onKeyDown = _this.onKeyDown.bind(_this);
	    _this.onPaste = _this.onPaste.bind(_this);

	    // http://egorsmirnov.me/2015/09/30/react-and-es6-part4.html
	    // this.shouldComponentUpdate = PureRenderMixin
	    //   .shouldComponentUpdate.bind(this)
	    return _this;
	  }

	  _createClass(Editor, [{
	    key: 'focus',
	    value: function focus() {
	      this.refs.edit.blur(); // 确保focus有效 好神奇
	      this.refs.edit.focus();
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(props) {
	      // dangerousSetInnerHTML不需要更新
	      // 修复输入文字 cursor回跳现象
	      if (!objEqual(props.style, this.props.style)) return true;
	      return false;
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.lint();
	    }
	  }, {
	    key: 'lint',
	    value: function lint() {
	      (0, _format.lint)(this.refs.edit);
	    }
	  }, {
	    key: 'clearRange',
	    value: function clearRange() {
	      (0, _range.clearRange)();
	    }
	  }, {
	    key: 'restoreRange',
	    value: function restoreRange() {
	      if (this.savedRange) {
	        (0, _range.setRange)(this.savedRange);
	        this.savedRange = null;
	      }
	    }
	  }, {
	    key: 'saveRange',
	    value: function saveRange() {
	      this.lint();
	      var range = (0, _range.getRange)(this.refs.edit);
	      if (range) this.savedRange = range;
	    }
	  }, {
	    key: 'getHTML',
	    value: function getHTML() {
	      return this.refs.edit.innerHTML;
	    }
	  }, {
	    key: 'setHTML',
	    value: function setHTML(html) {
	      this.refs.edit.innerHTML = html;
	    }
	  }, {
	    key: 'insertHTML',
	    value: function insertHTML(html) {
	      var emojiReplace = this.props.emojiReplace;

	      this.focus();
	      setTimeout(function () {
	        if (emojiReplace) {
	          html = emojiReplace(html);
	        }
	        document.execCommand('insertHTML', 0, html);
	      });
	    }
	  }, {
	    key: 'insertText',
	    value: function insertText(text) {
	      var html = escapeHTML(text);
	      this.insertHTML(html);
	    }
	  }, {
	    key: 'insertImage',
	    value: function insertImage(src) {
	      this.insertHTML('<img src="' + src + '">');
	    }
	  }, {
	    key: 'onPaste',
	    value: function onPaste(e) {
	      var _this2 = this;

	      e.preventDefault();
	      e = e.originalEvent || e;
	      var pasteToFs = this.props.pasteToFs;

	      var types = e.clipboardData.types || [];
	      var items = e.clipboardData.items || [];
	      var html = e.clipboardData.getData('text/html');
	      var text = e.clipboardData.getData('text/plain');
	      // console.log('paste:html', html)
	      // console.log('paste:text', text)

	      // mac上base64图片 text存在 html为空
	      // 发送消息时有安全过滤 不怕恶意代码插入
	      if (!html.trim() && /^\s*data:image\//.test(text)) {
	        html = '<img src="' + text.trim() + '">';
	      }
	      // mac finder与qq图文 暂时无法区分
	      // else {
	      //   // 放入else 因为后者意外地包含前者
	      //   // 在mac上直接从finder复制粘贴文件 nw无法获取具体路径
	      //   // 因此直接忽略行为 windows本身也是忽略
	      //   // qq能正常响应并且发送文件 这点我们做不到
	      //   const isFinderCopy = types[0] === 'text/plain'
	      //     && types[1] === 'Files'
	      //     && !/^https?:\/\//.test(text)
	      //   if (isFinderCopy) return
	      // }

	      // 优先处理图片 即可实现 base64粘贴和excel粘贴为图片
	      // const isFile = types && types.indexOf('Files') > -1
	      var i = 0,
	          item = void 0;
	      for (; i < types.length; i++) {
	        if (types[i] === 'Files') {
	          item = items[i];
	          break;
	        }
	      }
	      var hasImage = item && item.kind === 'file' && /^image\/|^(jpe?g|png|bmp|gif)$/.test(item.type);

	      var pasteHTMLOrText = function pasteHTMLOrText() {
	        if (html) {
	          (function () {
	            var _html = _format.filter.call(_this2, html); // pass `this`
	            setTimeout(function () {
	              _this2.insertHTML(_html);
	            });
	          })();
	        } else if (text) {
	          text = text.replace(/^\n+|\n+$/g, '');
	          setTimeout(function () {
	            _this2.insertText(text);
	          });
	        }
	      };
	      var isImage = hasImage && !html && !text;

	      var isTable = false;
	      if (html) {
	        // 来自filter函数的部分逻辑
	        var mat = html.match(/<body(>| [^>]*>)([\s\S]*?)<\/body>/i);
	        if (mat) {
	          var div = document.createElement('div');
	          div.innerHTML = mat[2];
	          if (div.querySelector('table')) {
	            isTable = true;
	          }
	        }
	      }

	      // 从word/excel粘贴表格 需要提取图片 同QQ
	      var pasteImage = hasImage && (isImage || isTable);

	      // 延时 解决 execCommand('paste') 递归问题
	      // setTimeout(() => {
	      // xslx表格含html(优先提取图片) MacQQ图文不含html(优先提取文本)
	      // if (pasteToFs && isImage && (html.trim() || !text.trim() && !html.trim())) {
	      if (pasteToFs && pasteImage) {
	        __webpack_require__(6).default.call(this, e, function (err) {
	          // windows qq粘贴单图 result为空 可以html粘贴
	          if (err) {
	            pasteHTMLOrText();
	          }
	        });
	      } else {
	        pasteHTMLOrText();
	      }
	      // mac粘贴word需要 优先识别文本 然后图片
	      // 粘贴板内有files 如来自QQ截屏
	      // else if (pasteToFs && types && types.indexOf('Files') > -1) {
	      //   require('./pasteFile').default.call(this, e)
	      // }
	      // })
	    }

	    // 确保选中前clean 不影响选中

	  }, {
	    key: 'onMouseDown',
	    value: function onMouseDown() {
	      this.lint();
	    }

	    // 差点漏了从richtext从迁移

	  }, {
	    key: 'onKeyDown',
	    value: function onKeyDown(e) {
	      // 禁止PageUp/Down键 导致页面诡异上移
	      // 具体原因不详
	      if (e.keyCode === 33 || e.keyCode === 34) {
	        e.preventDefault();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      // fix warning: Unknown prop `abc` on <div> tag.
	      // Remove this prop from the element.
	      // For details, see https://fb.me/react-unknown-prop
	      var _props = this.props;
	      var id = _props.id;
	      var className = _props.className;
	      var style = _props.style;

	      return _react2.default.createElement('div', _extends({ ref: 'edit', contentEditable: true,
	        onMouseDown: this.onMouseDown,
	        onKeyDown: this.onKeyDown,
	        onPaste: this.onPaste
	      }, {
	        id: id,
	        className: className,
	        style: style
	      }));
	    }
	  }]);

	  return Editor;
	}(_react.Component);

	Editor.propTypes = {
	  pasteToFs: _react.PropTypes.bool,
	  emojiReplace: _react.PropTypes.func,
	  id: _react.PropTypes.string,
	  className: _react.PropTypes.string,
	  style: _react.PropTypes.object
	};
	exports.default = Editor;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.parse = parse;
	exports.filter = filter;
	exports.lint = lint;

	var _jquery = __webpack_require__(4);

	var _jquery2 = _interopRequireDefault(_jquery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function parse() {
	  var items = [];
	  // todo: text br image qface emoji
	  return items;
	}

	function filter(html) {
	  var mat = html.match(/<!--\s*StartFragment\s*-->([\s\S]*?)<!--\s*EndFragment\s*-->/i);
	  if (mat) html = mat[1];
	  mat = html.match(/<body(>| [^>]*>)([\s\S]*?)<\/body>/i);
	  if (mat) html = mat[2];
	  var $src = (0, _jquery2.default)('<div>').html(html);
	  var $dest = (0, _jquery2.default)('<div>');
	  filterContent.call(this, $src, $dest); // pass `this`
	  $dest.children('[x-block]').removeAttr('x-block');
	  $dest.children('div').each(function (i, el) {
	    el.innerHTML = el.innerHTML.replace(/\n{3,}/g, '\n\n'); // 消除过多换行
	    if (!el.innerHTML.trim()) el.parentNode.removeChild(el); // 消除空白div
	  });
	  // 修复从qq复制 英文基本word-break失效
	  // `&nbsp;`需替换为空格
	  return $dest.html().replace(/&nbsp;/g, ' ');
	}

	/* eslint-disable */
	// https://github.com/fritx/none/blob/dev/elec%2Fapp%2Feditor.js
	var blockElements = 'address, article, aside, blockquote, canvas, dd, div, dl, fieldset, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hgroup, hr, main, nav, noscript, ol, output, p, pre, section, table, tfoot, ul, video';
	blockElements += ', li'; // display:list-item => block
	blockElements += ', tr';

	// 过滤清理 内容
	function filterContent($src, $dest) {
	  var _this = this;

	  ;[].forEach.call($src[0].childNodes, function (node) {
	    if (node.nodeType === Node.TEXT_NODE) {
	      // getLine().append(node.cloneNode())
	      var $line = getLine();
	      var _text = node.textContent;
	      if ($line.is(':empty')) {
	        _text = _text.replace(/^\n+/g, '');
	      }
	      $line.append(new Text(_text));
	      return;
	    }

	    if (node.nodeType !== Node.ELEMENT_NODE) {
	      return;
	    }

	    var $node = (0, _jquery2.default)(node);

	    // 过滤无效标签 修复粘贴出代码的情况
	    if ($node.is('meta, title, style, script')) return;

	    // 过滤消息中的用户头像
	    if ($node.is('.nocopy')) return;

	    if ($node.is('img')) {

	      // 如果可能是emoji 则优先使用alt
	      // case: 右侧 http://changba.com/s/MWN6SYnX0zJwnnKNijYL-w?&code=Kxhsv6044ik
	      // if ($node.is('[class*=emoji], [src*=emoji]') && $node.attr('alt')) {
	      //   getLine().append($node.attr('alt'))
	      //   return
	      // }

	      var src = $node.attr('src');
	      var onImageNode = _this.props.onImageNode;

	      if (onImageNode) {
	        src = onImageNode($node[0]) || src;
	      }
	      getLine().append('<img src="' + src + '">');
	      return;
	    }

	    if ($node.is('br')) {
	      getLine().append('<br>');
	      // getLine(true) // br直接转div
	      return;
	    }

	    // var html = $node.html().trim()
	    var html = $node.html();
	    if (!html) return;

	    var isBlock = $node.is(blockElements);
	    if (isBlock) getLine(true);

	    if ($node.children().length > 0) {
	      filterContent.call(_this, $node, $dest); // pass `this`
	      if (isBlock) getLine(true);
	      return;
	    }

	    // 暂时解决textarea dom结构中 可能存在html标签 (原因不明)
	    // 避免用户误以为 粘贴出多余的html代码
	    // case: trello上一张card的title 居然靠textarea直接显示
	    if ($node.is('textarea')) return;

	    // 去除多余的换行
	    var text = $node.text().replace(/^\n+|\n+$/g, '');

	    if (!text) return;
	    getLine().append(document.createTextNode(text));
	    if (isBlock) getLine(true);
	  });

	  function getLine(newBlock) {
	    var $prev = $dest.children('div').last();
	    var $line = $prev;
	    // if ($prev.length > 0 && !$prev.html()) {
	    //   $prev.remove() // 清除空div
	    // }
	    if ($prev.length <= 0 || $prev.is('[x-block]')) {
	      $prev.removeAttr('x-block');
	      $line = (0, _jquery2.default)('<div>').appendTo($dest);
	    }
	    if (newBlock) {
	      $line.attr('x-block', ''); // block标记
	    }
	    return $line;
	  }
	}

	function lint(dom) {

	  return; // 暂时取消clean

	  // 消除嵌套多层的div
	  var $dom = (0, _jquery2.default)(dom);
	  var $el = $dom.clone();
	  // amazing无敌选择器 选出嵌套的目标
	  var $main = $el.find('div:has(>div:not(:has(div))), .editor').first();
	  $el.html($main.html());

	  $el.children('[x-block]').removeAttr('x-block');

	  // 如果只有一个空行 则视为空
	  var nodes = $el[0].childNodes;
	  if (nodes.length === 1) {
	    var $first = (0, _jquery2.default)(nodes[0]);
	    if ($first.is('br')) {
	      $el.html('');
	    } else {
	      nodes = $first[0].childNodes;
	      if (nodes.length === 1) {
	        var $first = (0, _jquery2.default)(nodes[0]);
	        if ($first.is('br')) {
	          $el.html('');
	        }
	      }
	    }
	  }

	  // 若超过一行 第一行需要div包裹 与其他行保持一致
	  var $prev = (0, _jquery2.default)([]);
	  var hasNext = false;
	  var nodes = $el[0].childNodes;
	  for (var i = 0; i < nodes.length; i++) {
	    var node = nodes[i];
	    if (node.tagName !== 'DIV') {
	      $prev.push(node);
	    } else {
	      hasNext = true;
	      break;
	    }
	  }
	  if (hasNext && $prev.length >= 1) $prev.wrapAll('<div>');

	  if ($el.html() !== $dom.html()) {
	    $dom.html($el.html());
	  }
	}
	/* eslint-enable */

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("jquery");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.clearRange = clearRange;
	exports.getRange = getRange;
	exports.setRange = setRange;

	var _jquery = __webpack_require__(4);

	var _jquery2 = _interopRequireDefault(_jquery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var selection = window.getSelection();

	function clearRange() {
	  // 是否可以 只移除特定range
	  selection.removeAllRanges();
	}

	function getRange(dom) {
	  var count = selection.rangeCount;
	  for (var i = 0; i < count; i++) {
	    var range = selection.getRangeAt(i);
	    if ((0, _jquery2.default)(range.commonAncestorContainer).closest(dom).length) {
	      return range;
	    }
	  }
	  return null;
	}

	function setRange(range) {
	  clearRange();
	  if (range) selection.addRange(range);
	}

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = pasteFile;

	var _fs = __webpack_require__(7);

	var _fs2 = _interopRequireDefault(_fs);

	var _path = __webpack_require__(8);

	var _os = __webpack_require__(9);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// import uuid from 'node-uuid'
	// import mime from 'mime'

	// http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript
	function uuid() {
	  function s4() {
	    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	  }
	  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
	}

	function pasteFile(e, cb) {
	  var _this = this;

	  // hack 一旦粘贴 滚至最底 错误的逻辑
	  // $('#editor').scrollTop(1e9)

	  e.preventDefault();
	  //let clipboard = gui.Clipboard.get()
	  //let text = clipboard.get('text')
	  var items = void 0,
	      item = void 0,
	      types = void 0,
	      i = 0;
	  var clipboardData = (e.originalEvent || e).clipboardData;

	  if (clipboardData) {
	    items = clipboardData.items;

	    if (!items) {
	      return;
	    }
	    item = items[0];
	    // let t = clipboardData.types
	    types = clipboardData.types || [];
	    for (; i < types.length; i++) {
	      if (types[i] === 'Files') {
	        item = items[i];
	        break;
	      }
	    }
	    if (item && item.kind === 'file' && /^image\/|^(jpe?g|png|bmp|gif)$/.test(item.type)) {
	      (function () {
	        var blob = item.getAsFile();
	        var reader = new FileReader();
	        // let ext = mime.extension(item.type)
	        var ext = item.type.match(/\/(.+)/)[1];
	        var file = (0, _path.join)((0, _os.tmpdir)(), uuid() + '.' + ext);
	        // let url = URL.createObjectURL(blob)
	        // richText.insertCapture(url)

	        reader.onload = function (e) {
	          if (!e.target.result) return cb(1);
	          _fs2.default.writeFile(file, e.target.result, 'binary', function (err) {
	            if (err) return;
	            // richText.insertCapture('file://' + file)
	            // global.editor.insertImage(`file:\/\/${file}`)
	            // edit.insertImage(`file:\/\/${file}`)
	            _this.insertImage('file://' + file);

	            // // 不知为何 企业qq复制的图片不能读取
	            // if (!e.target.result) return

	            // api.uploadFile(path,"img", (err,data) +> {
	            //     let url = config.get("resurl")+"/api/fs/view/"+data.token+"?size=mini&token="+global.token
	            //     richText.insertCapture(url)
	            // })
	          });
	          // $("#editor").focus()
	        };
	        reader.readAsBinaryString(blob);
	      })();
	    }
	  }
	}

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = require("fs");

/***/ },
/* 8 */
/***/ function(module, exports) {

	module.exports = require("path");

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = require("os");

/***/ }
/******/ ]);